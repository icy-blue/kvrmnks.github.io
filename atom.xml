<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kvrmnks.github.io</id>
    <title>Kvrmnks` blog</title>
    <updated>2020-07-14T08:39:57.943Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://kvrmnks.github.io"/>
    <link rel="self" href="https://kvrmnks.github.io/atom.xml"/>
    <subtitle>power overwhelming</subtitle>
    <logo>https://kvrmnks.github.io/images/avatar.png</logo>
    <icon>https://kvrmnks.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Kvrmnks` blog</rights>
    <entry>
        <title type="html"><![CDATA[ubuntu 上的 mysql + pymysql + screen]]></title>
        <id>https://kvrmnks.github.io/post/ubuntu-shang-de-mysql-pymysql/</id>
        <link href="https://kvrmnks.github.io/post/ubuntu-shang-de-mysql-pymysql/">
        </link>
        <updated>2020-07-14T08:32:59.000Z</updated>
        <content type="html"><![CDATA[<p>安装mysql</p>
<pre><code>apt install mysql-server
apt install mysql-client
</code></pre>
<p>然后先看 mysql 的版本, 一定要注意版本<br>
不同版本的 mysql 改密码的方式是不同的<br>
比如 mysql8.0 的情况下</p>
<pre><code>use mysql;
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '你的新密码'
</code></pre>
<p>退出即可</p>
<p>当然可能不知道一开始的密码</p>
<pre><code>vim /etc/mysql/debian.cnf
</code></pre>
<pre><code>screen -S 名字
</code></pre>
<pre><code>ctrl+a     d 离开当前
</code></pre>
<pre><code>screen -r 名字恢复
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[方差]]></title>
        <id>https://kvrmnks.github.io/post/fang-chai/</id>
        <link href="https://kvrmnks.github.io/post/fang-chai/">
        </link>
        <updated>2020-05-31T05:43:52.000Z</updated>
        <content type="html"><![CDATA[<!--more-->
<p><img src="https://kvrmnks.github.io/post-images/1590903931832.png" alt="" loading="lazy"><br>
先咕掉题解, 只贴代码吧</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
const int MOD = 1000000007;
const int MAXN = 1000005;
typedef long long ll;
int n,data[MAXN],inv[MAXN],fac[MAXN],ifac[MAXN];
int sum,qsum;
int comb(int n,int m){
    return (((ll)fac[n]*(ll)ifac[m])%MOD*(ll)ifac[n-m])%MOD;
}
int main(){
    scanf(&quot;%d&quot;,&amp;n);
    for(int i=1;i&lt;=n;i++)scanf(&quot;%d&quot;,data+i);
    inv[0]=inv[1]=fac[0]=ifac[0]=fac[1]=ifac[1]=1;
    for(int i=1;i&lt;=n;i++){
        sum = (sum+data[i])%MOD;
        qsum = (qsum + ((ll)data[i]*(ll)data[i])%MOD)%MOD;
    }
    for(int i=2;i&lt;=n+1;i++){
        inv[i]=((ll)(MOD-MOD/i)*inv[MOD%i])%MOD;
        fac[i] = ((ll)fac[i-1]*(ll)i)%MOD;
        ifac[i] = ((ll)ifac[i-1] * (ll)inv[i])%MOD;
    }
    int ans=0;
    for(int i=0;i&lt;n;i++){ans=(ans+((ll)comb(n-1,i)*(ll)inv[i+1])%MOD)%MOD;}
    ans=((ll)ans*(ll)qsum)%MOD;
    for(int i=1;i&lt;=n;i++){
        ll tmp = 0;
        tmp = (comb(n-1,i-1) * (ll)qsum)%MOD;
        if(i&gt;=2)
            tmp =(tmp + ((ll)comb(n-2,i-2)*(ll)((((ll)sum*(ll)sum)%MOD-qsum)%MOD+MOD)%MOD)%MOD)%MOD;
        tmp = (tmp * (ll)(inv[i]))%MOD;
        tmp = (tmp * (ll)(inv[i]))%MOD;
        ans = (ans - tmp)%MOD;
        ans = (ans + MOD)%MOD;
    }
    printf(&quot;%d&quot;,ans);
    return 0;
}

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[彼可取而代之]]></title>
        <id>https://kvrmnks.github.io/post/bi-ke-qu-er-dai-zhi/</id>
        <link href="https://kvrmnks.github.io/post/bi-ke-qu-er-dai-zhi/">
        </link>
        <updated>2020-05-18T10:51:56.000Z</updated>
        <summary type="html"><![CDATA[<p>说起彭院长, 最令我印象深刻的便是这句话, &quot;彼可取而代之&quot;.</p>
]]></summary>
        <content type="html"><![CDATA[<p>说起彭院长, 最令我印象深刻的便是这句话, &quot;彼可取而代之&quot;.</p>
<!--more-->
<p>长久以来, 我一直迷惑于目标与梦想, 还记得从小学开始, 班主任或者任课老师就会敦促我们立下计划, 思考未来, 想想20年后的世界, 许下未来的约定.<br>
迷惑于目标与梦想, 这句话听起来蛮中二的呢.<br>
现在总有人说要把自己丢出舒适圈, 去体验一下不一样的生活和挑战.<br>
未知带给我们的除了好奇还有危险.<br>
大概安于现状也是一种梦想吧.<br>
就像这个时刻, 刚刚完成了第三个大作业的一个短暂的闲暇时光.<br>
这个期间一直在想这样的问题.<br>
我到底想要什么, 我到底怎么样得到我想要的东西.<br>
这也是一个蛮中二的问题呢.<br>
我回想起了哲学, 世界观, 方法论.<br>
如果漫无目的的生存, 岂不是失去了灵魂.<br>
如果在没有航灯的夜晚, 到底该怎么行走.</p>
<blockquote>
<p>啊，留下一条路等改日再见！<br>
但我知道路径延绵无尽头，<br>
恐怕我难以再回返。<br>
也许多少年后在某个地方，<br>
我将轻声叹息把往事回顾，<br>
一片树林里分出两条路，<br>
而我选了人迹更少的一条，<br>
因此走出了这迥异的旅途。</p>
</blockquote>
<p>我不知道能否找到那条路.<br>
一条即使是自己不回头也能走下的路.<br>
一直走下的路.<br>
自己选择的路...<br>
跪着也要走完吗...<br>
该如何让自己的文风看起来不是那么中二呢...<br>
该如何知道自己到底是不是走在正确的道路上.</p>
<blockquote>
<p>去改变<br>
既然如此那就去改变呀</p>
</blockquote>
<p>能否有一天窥测到神的领域.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[小E的故事]]></title>
        <id>https://kvrmnks.github.io/post/xiao-e-de-gu-shi/</id>
        <link href="https://kvrmnks.github.io/post/xiao-e-de-gu-shi/">
        </link>
        <updated>2020-05-10T14:59:38.000Z</updated>
        <summary type="html"><![CDATA[<p>梦寐以求地写了故事</p>
]]></summary>
        <content type="html"><![CDATA[<p>梦寐以求地写了故事</p>
<!--more-->
<p>E：“我就是一个普通的学生。”<br>
E：“一个没有加入任何社团，没有担任任何班级职务的普通的大三学生。”<br>
E：”平日里我最喜欢干的事，便是漫步在花园中，不带任何思考，静静地感受着这一切的美丽，如果世间的万物都想这些花一样纯洁美丽该有多好。有事我会在显微镜下与细胞幽会，看着这些单纯地却又是万物之始的生物，静静地思考。”<br>
E：“我讨厌那些所谓的达官显贵，那些不就是在学生会里任一个破烂职位就沾沾自喜，甚至轻易命令别人的人，我讨厌那些靠着和老师讨好关系从而得到成绩上优惠的人，当然我也讨厌那些这样做的老师。“<br>
E：“但令人可笑的是，那些所谓的宣传榜上，全都是这些人的身影。“<br>
E：“像是过家家一样的，过着大家认为是对的生活就好了嘛。“<br>
E：“可怜的学校，养了这么一帮只知道排位置的废物。“<br>
G：“我说啊，你可别这么中二下去了。“<br>
G：“在这么下去，到了社会怕是活不过1年。“<br>
E：“你懂什么，就是因为你们这些人都这么想，这个社会才这么腐烂。“<br>
G：“就这？你给这个社会做什么贡献了吗，就平白无故骂这骂那。“<br>
G：“你这种人，有什么用，帮不了别人帮不了社会，你存在到底有什么意义。“<br>
E：“你给我等着，我就算是没有什么用，我也不会让他们好过的。“<br>
E：“我迟早要让你看到，那帮人到底有多无能。“</p>
<p>C：“学弟，我听说你很久了。“<br>
E：“哦？我何德何能让你能记住我的名字？“<br>
C：“学弟啊，不瞒你说，我也不喜欢我们学校里的那些叫兽们。“<br>
E：“挺有趣的呀，说来听听？“<br>
C：“其实吧，最近我和几个人在谋划一件事情，你也知道最近四六级考试快到了吧。“<br>
E：“嗯“<br>
C：“你看现在国家对这件事这么看重，监考那么严，要是考试过程中出了什么事故，那些老师肯定不好受。“<br>
E：“是呀，所以？“<br>
C：“所以我们想大家一起搞个作弊事件，还能收点钱不是挺好？“<br>
E：“不好意思，我对钱不感兴趣。“<br>
C：“等等，你想想，如果这些老师因为这事被罚了，不是很好吗？“<br>
E：“嗯，这些老师也是好日子呆够了，早晚找到机会就去治他们。“<br>
C：“你看，这不就是个好机会吗，你这么等下去你马上就毕业了，没机会了呀。“<br>
E：“嗯…“<br>
C：“这样吧，我把电话给你，你什么时候有了想法就跟我打电话。“</p>
<p>G：“哟，怎么找，当代鲁迅回来了？“<br>
G：“看你这副样子，又找到实现你的人生理想的办法了？“<br>
E：“…”<br>
G：“跟你说了，早点放弃你那些狗屁想法，老老实实回来，好好适应社会，现在社会就是这副样子，逆之者亡，顺之者昌。”<br>
E：“弱智。”（推门离开）<br>
G：“哎”</p>
<p>E：“你好，我是刚才那个人”<br>
C：“怎么想明白了？”<br>
E：“嗯，说吧，要我怎么干”<br>
C：“好，明天晚上，校门外面的酒店206，我们等着你”</p>
<p>A：“大家都来齐了，服务员，来上菜吧”<br>
B：“我联系到了大约20个人要买我们的合作。”<br>
C：“我这里拉到了E帮我们做答案。”<br>
A：“E，先说好了，这件事情要是败露了，我们可不会负责的。”<br>
E：“嗯，我明白的。”<br>
A：“好，我弄到了无线电发送和接收装置。”<br>
A：“考试的时候，我们在学校附近开个房间，C和E你们负责收发答案，我和B检查设备情况。”<br>
C：“那，你说这钱怎么分呀….”<br>
A：“害，这钱我们3，3，2，2来分，我和B三，你看怎么样？”<br>
C：“好，大哥果然阔气。”<br>
A：”哈哈，来菜都差不多上齐了，我们开吃开吃，等着票干完了，我们就去这里最好的酒店好好吃上一顿。”</p>
<p>（饭局结束）<br>
E：“呵，搞了半天，这些人也没一个正常人。”<br>
E：“不过也就是写追逐利益的匹夫。”<br>
E：“今天就不会学校了吧，学校那种地方怎么样都好吧。”</p>
<p>E：“去找个地方练练46级的英语题吧，毕竟也好久没做了。”</p>
<p>（考试那天）<br>
G：“这小子，那天我说了他一顿之后怎么连宿舍也不回了。”<br>
H：“随他便把，我们还八不得他死在外面呢。”<br>
G：“也是呢。”</p>
<p>A：“我这里显示信号发送器工作正常，B你那边的接收器情况怎么样？”<br>
B：“有一部分好像没连上，A你租个这么远的宾馆干啥呀，学校旁边不是有更近的吗”<br>
A：“这不是手头没钱吗，下次，等我们这次结束就好了。”<br>
A：“外面好像有根铁丝，你去做个天线试试看”<br>
E：“我来吧，我正好研究过一点这个。”<br>
B：“快点啊，40w呐”<br>
B：“好了好了，没想到你小子果然有一手呀，下次哥几个肯定忘不了你。”<br>
E：（“弱智”）<br>
C：“E你快过来，试题传过来了”<br>
E：“好好好”<br>
C：“你小子有实力呀，做的这么快，没想到我碰见了个神仙。”<br>
E：（“不是说你之前听说过我吗，果然仅仅是仅仅是….”）<br>
B：“嗯？怎么现在信号又有一点不好呢？”<br>
A：“你干脆稍微站出去一点吧，这样信号可能稍微好点。“<br>
B：“好来好来，辛苦这一次，幸福一辈子呀。“<br>
A：“你说的没错。“<br>
E：(“呵呵，不过是一群只知道钱的人“）<br>
C：“快点，别看他们了，快点做题。“<br>
E：“已经做完了。“<br>
E：“已经足够了吧，已经能够让那些老师铭记终生了吧，我头有些疼，我先回去了。“<br>
A：“钱呐，不要了吗“<br>
E：“没事，不要了。“<br>
A：“好好咱碰上了弱智。“<br>
E：“弱智“（推门离开）</p>
<p>E：“嗯？怎么这里有这么多警察，路上有这么多警车。“<br>
E：“哦，这样吗“<br>
E：“走吧，回去吧，反正都达到了，已经完成了惊天动地的事情了呢，已经能证明那些人都是废物了。“<br>
E走回了房间，这时F打开了门<br>
F：“你好，我们是警察，这是你们分给考试的信号接收器吧，我们根据无线电定位了你们的位置，现在我们希望你们跟我们走一趟，配合调查。“</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[程设大作业2-markdown编辑器]]></title>
        <id>https://kvrmnks.github.io/post/cheng-she-da-zuo-ye-2-markdown-bian-ji-qi/</id>
        <link href="https://kvrmnks.github.io/post/cheng-she-da-zuo-ye-2-markdown-bian-ji-qi/">
        </link>
        <updated>2020-04-28T14:15:17.000Z</updated>
        <summary type="html"><![CDATA[<p>建一篇blog记录一下进度</p>
]]></summary>
        <content type="html"><![CDATA[<p>建一篇blog记录一下进度</p>
<!--more-->
<h4 id="2020-4-28">2020-4-28</h4>
<p>起步<br>
试图安装双系统，失败<br>
用虚拟机的Qt有点辣眼睛<br>
简单学了一下Qt基本内容，试了试QSocket</p>
<h4 id="2020-5-02">2020-5-02</h4>
<p>今天又收获了好多好多的坑呢</p>
<h5 id="markdown-html">markdown-&gt;html</h5>
<p>https://github.com/hoedown/hoedown<br>
纯c手写，clone之后直接nmake一下，调用方法的话写 hoedown.exe -h 就好啦</p>
<h5 id="nmake-相关">nmake 相关</h5>
<p>这个东西是Vs自带的，也就是说要装一个Vs<br>
用everything 找 nmake.exe<br>
然后注意这个的环境变量设置<br>
要一个INCLUDE和LIB 都找一下<br>
有的可能缺kernel32在LIB下找一下</p>
<h5 id="webenginewidgets-中的-qwebengineview">webenginewidgets 中的 QWebEngineView</h5>
<p>这个需要编译器是MSVC 2015+大约<br>
然后只需要setHtml + show就好了<br>
别忘记show</p>
<h5 id="资源文件相关">资源文件相关</h5>
<p>资源文件是直接编译进exe的所以只可读<br>
资源文件的格式只有（目前发现）QFile能解析</p>
<h5 id="资源文件的地址转绝对地址">资源文件的地址转绝对地址</h5>
<p>建一个虚拟文件目录 QTemporaryDir<br>
const QString tmp = mainDir-&gt;path()+&quot;/hoedown.exe&quot;;<br>
QFile::copy(&quot;:/new/prefix1/project/hoedown.exe&quot;,tmp）；<br>
然后把资源目录的文件复制进去<br>
就可以用tmp访问了</p>
<h5 id="文件读写">文件读写</h5>
<pre><code class="language-cpp">    QFile out(&quot;dududusdshdksjhdksout.txt&quot;);
    if(out.open(QIODevice::WriteOnly)){
       QTextStream ts(&amp;out);
        ts&lt;&lt;textTextEdit-&gt;toPlainText();
        process-&gt;start(mainDir-&gt;path()+&quot;/hoedown.exe --all-block --all-span --all-flags &quot;+&quot;dududusdshdksjhdksout.txt&quot;);
    }else{
        qDebug(&quot;wrong&quot;);
    }
</code></pre>
<h5 id=""></h5>
<h5 id="如何调用外部的exe">如何调用外部的exe</h5>
<p>QProcess<br>
https://blog.csdn.net/wzj0808/article/details/79367314</p>
<h5 id="qprocess-中stdout的文件编码">QProcess 中stdout的文件编码</h5>
<p>https://blog.csdn.net/liukang325/article/details/80986472</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[人口流量预测比赛的反思]]></title>
        <id>https://kvrmnks.github.io/post/ren-kou-liu-liang-yu-ce-bi-sai-de-fan-si/</id>
        <link href="https://kvrmnks.github.io/post/ren-kou-liu-liang-yu-ce-bi-sai-de-fan-si/">
        </link>
        <updated>2020-04-28T13:58:21.000Z</updated>
        <summary type="html"><![CDATA[<p>嘛，第一次参加这样的比赛，总该记录一下问题和反思吧</p>
]]></summary>
        <content type="html"><![CDATA[<p>嘛，第一次参加这样的比赛，总该记录一下问题和反思吧</p>
<!--more-->
<h2 id="总结">总结</h2>
<p>现在B榜还没结束，估计这篇blog发出来就结束了（<br>
参赛队员3个19级，1个18级<br>
我这里负责写模型的代码<br>
比赛时间大约2个月<br>
每天占用的时间还是挺长的<br>
中间也学了挺多东西<br>
目前排名大约是rk150~200左右，成绩打败了2/3的baseline，一共3个baseline<br>
总成绩在前17%<br>
情况并不是太好，或者更加精确的说我也不知道这样的结果是好还是不好。<br>
第一次参加比赛，虽然有这样或者那样的理由可以推脱，但是也不能不总结吧。</p>
<p>所以站在学习的角度来说<br>
这次比赛的意义还是非常大的，效果也是非常好的，也学到了py，pytorch，pandas，numpy一些东西。</p>
<p>站在比赛的角度来说可以说是十分糟糕<br>
以至于我一直想要早早结束这个比赛</p>
<h2 id="反思">反思</h2>
<h3 id="baseline问题">baseline问题</h3>
<p>没有去看别人的baseline，或是没有太关注baseline的做法，不可否认的是baseline在得分不算太低的时候，是选手争先效仿的，也就是说效果至少还可以，我直接忽视了这里，不仅没有好好思考为什么baseline能做到这样的效果，而且根本没有粗略的看完全部的baseline。</p>
<h3 id="模型上一些缺失和替代问题">模型上一些缺失和替代问题</h3>
<p>在阅读文献和别人的代码的时候出现了一些没有在意的地方，还有一些不知道怎么做，却用一些方法糊弄过去的时候，<s>虽然糊弄过去之后反而效果更好一点</s>，一些参数比如优化器，学习率，误差函数没能做到完全一致，在后期增加了调试的复杂度。</p>
<h3 id="没有做好后手">没有做好后手</h3>
<p>rt，一直在做一个paper，而且别的paper也并没有深刻的评估，这个问题倒不是主观上的问题。</p>
<h3 id="模型转化上">模型转化上</h3>
<p>盲目转换，没有考虑到内部的误差，当然这也不是主观上的问题，而且重要的一点是，我怀疑转化这一步的误差，团队里并没有一致认清。</p>
<h3 id="交流上的问题">交流上的问题</h3>
<p>一开始在交流的时候没能给每个人分配好任务，前期浪费了一点时间，毕竟对于新手来说给一个plan去做，比自己dfs效果要好一点。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[你是否还能假装自己是别人呢]]></title>
        <id>https://kvrmnks.github.io/post/ni-shi-fou-huan-neng-jia-zhuang-zi-ji-shi-bie-ren-ni/</id>
        <link href="https://kvrmnks.github.io/post/ni-shi-fou-huan-neng-jia-zhuang-zi-ji-shi-bie-ren-ni/">
        </link>
        <updated>2020-04-04T12:07:44.000Z</updated>
        <summary type="html"><![CDATA[<p>久违的<s>吹水</s>又来了!</p>
]]></summary>
        <content type="html"><![CDATA[<p>久违的<s>吹水</s>又来了!</p>
<!--more-->
<p>最近一段时间还真是又辛苦又痛苦呢.</p>
<p>不知不觉又到4月了, 和数字9一样, 给人的总是一个突变的感觉. 到了四月才发觉现在已经不是上一年, 到了9月才意识到原来一年已经悄悄过去了一半.</p>
<p>总是有这样或者那样的意识上的突变, 19岁的人看起来还不是那么大, 但是21岁的年龄却又看起来那么成熟.</p>
<p>还记得小时候玩的&quot;美食大战老鼠&quot;, 6级的美食到7级的美食总是一道那么大的门槛...</p>
<p>3~4年前的我还能在看番时热泪盈眶, 现在反而做不到了呢. 现在反而开始喜欢一些有深度的作品, 一些清新的作品. 换个文艺一点的说法, 是想诗一样的作品呢.</p>
<p>闲暇时, 我思考了一下为什么会有这样的变化, 我发现, 现在的我似乎没法将自己很好的带入到角色里. 只能在一旁静静地角色们展现自己, 不再能把自己带入对比自己.</p>
<p>或许是看的时候不太专注了? 那个时候的我, 在看完之后还会有那种怅然若失的感觉, 脑子里会不时地重复剧情. 而现在就变成了在使用快餐, 仅仅是为了吃饱. 几个月前我又体验了这样的感觉是《薇尔莉特·伊芙加登外传 - 永远与自动手记人偶 》</p>
<p>像是故乡的春风一样, 我在想, 这样的感觉是否也是无法再现的呢.</p>
<p>这让我想起了我在训练的模型(唐突的例子)</p>
<p>随着训练次数的上升, 原来的数据都无法再现了.</p>
<p>我们现在还能否假装自己是别人呢?</p>
<p>现在我们还能做白日梦吗...</p>
<p>在一面让自己适应于现实的时候, 我是否还能跳出这些, 跳出现实的框架, 去想那些虚无飘渺的事, 去假装那些是真的, 假装自己是另一个人呢.</p>
<p>这是否是我们对现实的过拟合呢(又一个唐突的例子).</p>
<p>(deep learning总是能在奇怪的地方派上用场呢</p>
<p>我又想起来人们总说人变老了会越来越想小孩, <s>嘛, 看起来不是过拟合呢</s></p>
<p>如果能把这个4维的空间永远的保留下来该有多好, 即使是离散的也好呢...</p>
<p>ねぇ</p>
<p>思い出のカケラに<br>
名前をつけて保存するなら<br>
“宝物”がぴったりだね</p>
<p>说说看最近的事吧</p>
<p>在忙着做大作业...</p>
<p>在忙着做数据分析的比赛...</p>
<p>发现自己好像上课越来越不认真了...</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[codeforces 620]]></title>
        <id>https://kvrmnks.github.io/post/codeforces-620/</id>
        <link href="https://kvrmnks.github.io/post/codeforces-620/">
        </link>
        <updated>2020-02-16T01:46:47.000Z</updated>
        <summary type="html"><![CDATA[<p>老年人来打场div2</p>
]]></summary>
        <content type="html"><![CDATA[<p>老年人来打场div2</p>
<!--more-->
<h4 id="a">A</h4>
<h5 id="题目简介">题目简介</h5>
<p>两只兔子往中间跳,问能不能跳到一起,能输出时间</p>
<p>傻逼题</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
int main(){
	int t;
	scanf(&quot;%d&quot;,&amp;t);
	for(int i=1;i&lt;=t;i++){
		int x,y,a,b;
		scanf(&quot;%d%d%d%d&quot;,&amp;x,&amp;y,&amp;a,&amp;b);
		y-=x;
		a+=b;
		if(y%a){
			puts(&quot;-1&quot;);
		}else{
			printf(&quot;%d\n&quot;,y/a);
		}
	} 
	
	return 0;
} 
</code></pre>
<h4 id="b">B</h4>
<h5 id="题目大意">题目大意</h5>
<p>给一些长度一样长的字符串,问最多能构造出多长的回文串</p>
<p>傻逼题*2</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
const int MAXN = 105;
bool isRev[MAXN];
bool used[MAXN];
bool lk[MAXN][MAXN];
char str[MAXN][55];
int n,m;
int Q[MAXN],top;
bool isR(int x){
	bool flag = true;
	for(int i=1;i&lt;=m;i++){
		if(str[x][i] != str[x][m-i+1]){
			flag = false;
		}
	}
	return flag;
}
bool canlk(int x,int y){
	bool falg = true;
	for(int i=1;i&lt;=m;i++){
		if(str[x][i] != str[y][m-i+1]){
			falg = false;
			break;
		}
	}
	return falg;
}
int main(){
	scanf(&quot;%d%d&quot;,&amp;n,&amp;m);
	for(int i=1;i&lt;=n;i++){
		scanf(&quot;%s&quot;,str[i]+1);
	}
	for(int i=1;i&lt;=n;i++)
		isRev[i] = isR(i);
	for(int i=1;i&lt;=n;i++){
		for(int j=i+1;j&lt;=n;j++){
			lk[i][j] = lk[j][i] = canlk(i,j);
		}
	}
	int mxlen = 0;
	for(int i=1;i&lt;=n;i++){
		for(int j=i+1;j&lt;=n;j++){
			if(lk[i][j] &amp;&amp; used[i]==false &amp;&amp; used[j] == false){
				mxlen += 2*m;
				used[i] = used[j] = true;
			}
		}
	}
	int tmp = 0;
	memset(used,0,sizeof used);
	for(int i=1;i&lt;=n;i++){
		memset(used,0,sizeof used);
		tmp = 0;
		if(isRev[i]){
			used[i] = true;
			tmp += m;
			for(int j=1;j&lt;=n;j++){
				for(int k=j+1;k&lt;=n;k++){
					if(lk[j][k] &amp;&amp; used[j]==false &amp;&amp; used[k]==false){
						tmp += m*2;
						used[j] = used[k] = true;
					}
				}
			}
			mxlen = max(mxlen,tmp);
		}
	}
	printf(&quot;%d\n&quot;,mxlen);
	tmp = 0;
	memset(used,0,sizeof used);
	for(int i=1;i&lt;=n;i++){
		for(int j=i+1;j&lt;=n;j++){
			if(lk[i][j] &amp;&amp; used[i]==false &amp;&amp; used[j] == false){
				tmp += 2*m;
				used[i] = used[j] = true;
			}
		}
	}
	if(tmp == mxlen){
		memset(used,0,sizeof used);
		for(int i=1;i&lt;=n;i++){
			for(int j=i+1;j&lt;=n;j++){
				if(lk[i][j] &amp;&amp; used[i]==false &amp;&amp; used[j] == false){
					//tmp += 2*m;
					Q[++top] = i;
					Q[++top] = j;
					used[i] = used[j] = true;
				}
			}
		}	
		for(int i=1;i&lt;=top;i+=2){
			printf(&quot;%s&quot;,str[Q[i]]+1);
		}
		for(int i=top;i&gt;=1;i-=2){
			printf(&quot;%s&quot;,str[Q[i]]+1);
		}
		return 0;
	}
	for(int i=1;i&lt;=n;i++){
		memset(used,0,sizeof used);
		tmp = 0;
		if(isRev[i]){
			used[i] = true;
			tmp += m;
			for(int j=1;j&lt;=n;j++){
				for(int k=j+1;k&lt;=n;k++){
					if(lk[j][k] &amp;&amp; used[j]==false &amp;&amp; used[k]==false){
						tmp += m*2;
						used[j] = used[k] = true;
					}
				}
			}
			//mxlen = max(mxlen,tmp);
		}
		if(tmp == mxlen){
			memset(used,0,sizeof used);
			Q[0] = i;
			used[i] = true;
			for(int j=1;j&lt;=n;j++){
				for(int k=j+1;k&lt;=n;k++){
					if(lk[j][k] &amp;&amp; used[j]==false &amp;&amp; used[k]==false){
						//tmp += m*2;
						Q[++top] = j;
						Q[++top] = k;
						used[j] = used[k] = true;
					}
				}
			}
			for(int i=1;i&lt;=top;i+=2){
				printf(&quot;%s&quot;,str[Q[i]]+1);
			}
			printf(&quot;%s&quot;,str[Q[0]]+1);
			for(int i=top;i&gt;=1;i-=2){
				printf(&quot;%s&quot;,str[Q[i]]+1);
			}	
			return 0;		
		}
	}
	return 0;
}
</code></pre>
<h4 id="c">C</h4>
<h5 id="题目大意-2">题目大意</h5>
<p>在一个数轴上,给定起点,1s只能走一个单位长度,给n个区间,问能不能,在相应的时间属于相应的区间</p>
<p>数据范围差评,好久没打cf了,总是想找个1e7+的复杂度...</p>
<p>直接每步维护一个区间</p>
<p>xjb求交就行了</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
typedef long long ll;
const int MAXN = 120;
ll t[MAXN],l[MAXN],r[MAXN];
int n;
ll L,R;
void solve(){
	scanf(&quot;%d%lld&quot;,&amp;n,&amp;L);
	R = L;
	for(int i=1;i&lt;=n;i++){
		scanf(&quot;%lld%lld%lld&quot;,&amp;t[i],&amp;l[i],&amp;r[i]);
	}
	for(int i=1;i&lt;=n;i++){
		L -= t[i] - t[i-1];
		R += t[i] - t[i-1];
		if(L&gt;r[i] || R &lt; l[i]){
			puts(&quot;NO&quot;);
			return;
		}else{
			L = max(L,l[i]);
			R = min(R,r[i]);
		}
	}
	puts(&quot;YES&quot;);
}
int main(){
	int Q;
	scanf(&quot;%d&quot;,&amp;Q);
	while(Q--){
		solve();
	}
	return 0;
} 
</code></pre>
<h4 id="d">D</h4>
<h5 id="题目大意-3">题目大意</h5>
<p>给一个大于小于号的序列,构造两个数列,每个数&gt;=1,&lt;=n,要求一个LIS最大,一个LIS最小</p>
<p>heheda,比赛的时候看错题了</p>
<p>考虑求LIS的nlogn做法,实际上我们只需要在二分的那一步改成贪心,用贪心维护那个上升数列就好了</p>
<p>构造的时候我是先把数分层,然后每层构造,有些小细节见代码</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
const int MAXN = 200050;
int Q,n;
char str[MAXN];
int type[MAXN],raw[MAXN];
vector&lt;int&gt; V[MAXN];
int Min;
void cons(int x,int pre){
	if(raw[x]!=0)return;
	
	if(x+1 &lt;= n &amp;&amp; type[x+1] == type[x] &amp;&amp; pre != x+1 &amp;&amp; str[x] == '&gt;'){
		cons(x+1,x);
		raw[x] = raw[x+1] + 1;
	}
	if(x-1 &gt;= 1 &amp;&amp; type[x-1] == type[x] &amp;&amp; pre != x-1 &amp;&amp; str[x-1] == '&lt;'){
		cons(x-1,x);
		raw[x] = raw[x-1] + 1;
	}
	raw[x] = Min + 1;
	Min ++;
}
void Cons(int x,int pre){
	if(raw[x]!=0)return;
	if(x-1 &gt;= 1 &amp;&amp; type[x-1] == type[x] &amp;&amp; pre != x-1 &amp;&amp; str[x-1] == '&lt;'){
		cons(x-1,x);
		raw[x] = raw[x-1] + 1;
	}	
	if(x+1 &lt;= n &amp;&amp; type[x+1] == type[x] &amp;&amp; pre != x+1 &amp;&amp; str[x] == '&gt;'){
		cons(x+1,x);
		raw[x] = raw[x+1] + 1;
	}

	raw[x] = Min + 1;
	Min ++;
}
void solve(){
	scanf(&quot;%d&quot;,&amp;n);
	scanf(&quot;%s&quot;,str+1);
	int lastpos = 1;
	int mx = 1;
	type[1] = 1;

	for(int i=1;i&lt;n;i++){
		if(str[i] == '&gt;'){
			lastpos = 1;
			type[i+1] = 1;
		}else{
			lastpos++;
			mx = max(mx,lastpos);
			type[i+1] = lastpos;
		}
	}
	for(int i=1;i&lt;=n;i++){
		V[type[i]].push_back(i);
	}
	Min = 0;
	for(int i=1;i&lt;=n;i++){
		for(int j=(int)V[i].size()-1;j&gt;=0;j--){
			cons(V[i][j],V[i][j]);
		}
	}
	for(int i=1;i&lt;=n;i++){
		printf(&quot;%d &quot;,raw[i]);
	}
	puts(&quot;&quot;);		
	
		
	
	for(int i=1;i&lt;=n;i++)
		V[i] = vector&lt;int&gt;();
	for(int i=1;i&lt;=n;i++)
		raw[i] = 0;
		
	lastpos = 1;
	mx = 1;
	type[1] = 1;
	
	for(int i=1;i&lt;n;i++){
		if(str[i] == '&gt;'){
			lastpos = 1;
			type[i+1] = 1;
		}else{
			++mx;
			lastpos = mx;
			type[i+1] = lastpos;
		}
	}
	for(int i=1;i&lt;=n;i++){
		V[type[i]].push_back(i);
	}
	Min = 0;
	for(int i=1;i&lt;=n;i++){
		for(int j=0;j&lt;(int)V[i].size();j++){
			Cons(V[i][j],V[i][j]);
		}
	}
	for(int i=1;i&lt;=n;i++){
		printf(&quot;%d &quot;,raw[i]);
	}
	puts(&quot;&quot;);
	
	
	for(int i=1;i&lt;=n;i++)
		V[i] = vector&lt;int&gt;();
	for(int i=1;i&lt;=n;i++)
		raw[i] = 0;
}
int main(){
	scanf(&quot;%d&quot;,&amp;Q);
	while(Q--){
		solve();
	}
	return 0;
}
</code></pre>
<p>其实原题不需要构造的答案是个排列</p>
<p><s>我只是不会写不是排列的做法</s></p>
<h4 id="e">E</h4>
<h5 id="题目大意-4">题目大意</h5>
<p>给一棵树,每次询问加一条边(x,y),询问是否有从a到b有长度等于k的可重边路径,该次询问完删掉(x,y)边</p>
<p>一共就3种可能</p>
<p>1.a -&gt; b</p>
<p>2.a -&gt; x -&gt; y -&gt; b</p>
<p>3.a -&gt; y -&gt; x -&gt; b</p>
<p>然后只要满足小于k且奇偶性一样就行</p>
<p>好久没写树链剖分了,写得头疼...</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
const int MAXN = 200050;
int sz[MAXN],top[MAXN],dep[MAXN],to[MAXN],nx[MAXN],h[MAXN],tot;
int ch[MAXN],fa[MAXN];
int n;
void add_edge(int x,int y){
	to[++tot] = y;
	nx[tot] = h[x];
	h[x] = tot;
}
void link(int x,int y){
	add_edge(x,y);
	add_edge(y,x);
}
void dfs1(int x,int y){
	sz[x] = 1;
	fa[x] = y;
	dep[x] = dep[y] + 1;
	for(int i=h[x];i;i=nx[i]){
		if(to[i] == y)
			continue;
		dfs1(to[i],x);
		sz[x] += sz[to[i]];
		if(sz[to[i]] &gt; sz[ch[x]])
			ch[x] = to[i];
	}
}
int lca(int x,int y){
	while(top[x]!=top[y]){
		dep[top[x]] &gt; dep[top[y]] ? x = fa[top[x]] : y = fa[top[y]];
	}
	return dep[x]&lt;dep[y]?x:y;
}
int dis(int x,int y){
	return dep[x] + dep[y] - 2 * dep[lca(x,y)];
}
void dfs2(int x,int tp){
	top[x] = tp;
	if(ch[x])dfs2(ch[x],tp);
	for(int i=h[x];i;i=nx[i]){
		if(to[i] == fa[x] || to[i] == ch[x])
			continue;
		dfs2(to[i],to[i]);
	}
}
int main(){
	scanf(&quot;%d&quot;,&amp;n);
	for(int i=1;i&lt;n;i++){
		int x,y;
		scanf(&quot;%d%d&quot;,&amp;x,&amp;y);
		link(x,y);
	}
	dfs1(1,0);
	dfs2(1,1);
	int Q,x,y,a,b,k;
	scanf(&quot;%d&quot;,&amp;Q);
	while(Q--){
		scanf(&quot;%d%d%d%d%d&quot;,&amp;a,&amp;b,&amp;x,&amp;y,&amp;k);
	//	cout&lt;&lt;lca(x,y)&lt;&lt;endl;
		int tmp = dis(x,y);
		if(tmp &lt;= k &amp;&amp; ((k-tmp)%2==0)){puts(&quot;YES&quot;);continue;}
		tmp = dis(x,a)+dis(y,b)+1;
		if(tmp &lt;= k &amp;&amp; ((k-tmp)%2==0)){puts(&quot;YES&quot;);continue;}
		tmp = dis(x,b) + dis(y,a) + 1;
		if(tmp &lt;= k &amp;&amp; ((k-tmp)%2==0)){puts(&quot;YES&quot;);continue;}
		puts(&quot;NO&quot;);
	}
	return 0;
} 
</code></pre>
<h4 id="f">F</h4>
<h5 id="简单口胡">简单口胡</h5>
<p>老年人不想写线段树了...</p>
<p>咕咕咕</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一起来搭Discuz和wordpress吧]]></title>
        <id>https://kvrmnks.github.io/post/yi-qi-lai-da-discuz-he-wordpress-ba/</id>
        <link href="https://kvrmnks.github.io/post/yi-qi-lai-da-discuz-he-wordpress-ba/">
        </link>
        <updated>2020-02-14T03:55:48.000Z</updated>
        <summary type="html"><![CDATA[<p>颓废了一个寒假,临末尾来搭一个Discuz+wordpress吧</p>
]]></summary>
        <content type="html"><![CDATA[<p>颓废了一个寒假,临末尾来搭一个Discuz+wordpress吧</p>
<!--more-->
<h3 id="环境">环境</h3>
<p>系统 centos 7</p>
<p>虚拟机 Vmware</p>
<p>Discuz X3.4</p>
<p>数据库</p>
<h3 id="一些linux指令简单介绍">一些linux指令简单介绍</h3>
<h4 id="reboot">reboot</h4>
<p>重启</p>
<h4 id="ll">ll</h4>
<p>显示当前目录文件和文件夹</p>
<p>相当于windows下的dir</p>
<h4 id="cd">cd</h4>
<p>后面加文件夹名可以跳转到相应的文件夹中</p>
<p>和windows上的cd一样</p>
<p>另外</p>
<pre><code>cd ~
</code></pre>
<p>是跳转到一开始的目录</p>
<pre><code>cd ..
</code></pre>
<p>是跳转到上一层</p>
<h4 id="vi">vi</h4>
<p>vi是linux中自带的记事本,不过相比较windows强了不知道多少倍...</p>
<p>它的GUI版本是熟悉的vim哦~</p>
<p>后面加文件名就可以打开或者创建文件</p>
<p>打开之后,要点一下i键才可以正常的编辑,如果和我版本一样的额话,可以在屏幕左下角看到一个INSERT</p>
<p>如果要保存或者退出,需要先点一下Esc键,这时候左下角的INSERT就会消失</p>
<p>输入</p>
<pre><code>:wq
</code></pre>
<p>就代表保存并退出</p>
<p>这个时候你输入的指令都会显示在屏幕的最下面</p>
<p>输入</p>
<pre><code>:q
</code></pre>
<p>代表退出</p>
<h4 id="cp">cp</h4>
<p>cp指令就是复制啦<br>
它的用法是</p>
<pre><code>cp -参数 你要复制的 你要复制到哪里
</code></pre>
<p>现在只用到了一个参数</p>
<p>-r代表递归复制,简单来说就是复制文件夹</p>
<h3 id="windows下使用ssh">windows下使用ssh</h3>
<p>右键点击屏幕左下角的windows标志</p>
<figure data-type="image" tabindex="1"><img src="https://kvrmnks.github.io/post-images/1587643078100.png" alt="" loading="lazy"></figure>
<p>选择Windows PowerShell</p>
<p>输入</p>
<pre><code>ssh 用户名@ip地址
</code></pre>
<p>如果出现让你输yes/no就输yes</p>
<p>然后会让你输入密码</p>
<p>连接完之后你在PowerShell里输入什么,连接的电脑就会做什么了~</p>
<h3 id="安装vmware">安装Vmware</h3>
<p>这有啥好说的???</p>
<p>跳过</p>
<h3 id="安装centos系统">安装centos系统</h3>
<p><s>这有啥好说的</s></p>
<p>一定要记好自己的密码,用户名默认是root</p>
<p>每次登录的时候都需要输入账号和密码</p>
<p><img src="https://kvrmnks.github.io/post-images/1587643152551.png" alt="" loading="lazy"><br>
这里主要讲一下配置网络的细节吧</p>
<p>因为可以联网之后,就可以用ssh控制电脑了呢,就不用盯着虚拟机那个小框了呢~</p>
<p>先输入以下</p>
<pre><code>ip addr
</code></pre>
<p>如果长成这样</p>
<p><img src="https://kvrmnks.github.io/post-images/1587643165015.png" alt="" loading="lazy"><br>
注意看红线下面没有出现ip地址,这个时候就要手动配置一下网络</p>
<p>打开虚拟机设置</p>
<p><img src="https://kvrmnks.github.io/post-images/1587643177915.png" alt="" loading="lazy"><br>
调整成桥接模式</p>
<p><img src="https://kvrmnks.github.io/post-images/1587643185764.png" alt="" loading="lazy"><br>
然后回到虚拟机,输入</p>
<pre><code>cd /etc/sysconfig/network-scripts
</code></pre>
<p>再输入</p>
<pre><code>ll
</code></pre>
<p><img src="https://kvrmnks.github.io/post-images/1587643195291.png" alt="" loading="lazy"><br>
输入</p>
<pre><code>vi ifcfg-ens33
</code></pre>
<p>编辑ifcfg-ens33文件</p>
<p>顺便一提</p>
<p>linux在输入文件名的时候是可以按Tab键自动补全的</p>
<p>如果你玩过minecraft的话会好理解的~</p>
<p><s>比windows高到不知道哪里去了</s></p>
<p>把</p>
<pre><code>ONBOOT=no
</code></pre>
<p>改成</p>
<pre><code>ONBOOT=yes
</code></pre>
<p>保存退出</p>
<p>重启一下虚拟机</p>
<p>再输入一下ip addr</p>
<p><img src="https://kvrmnks.github.io/post-images/1587643206328.png" alt="" loading="lazy"><br>
现在那个红线上面的ip地址就是你的虚拟机ip地址</p>
<p>现在可以用ssh链接你的虚拟机了~~</p>
<h3 id="配置基本的环境">配置基本的环境</h3>
<h4 id="在自己的电脑上安装git">在自己的电脑上安装git</h4>
<p>由于这个可能不是太复杂就不展开说了</p>
<h4 id="关防火墙和selinux">关防火墙和SELinux</h4>
<p>先要把什么防火墙之类的东西全关掉,防火墙什么的最讨厌了呢~</p>
<p>顺便一提,如果你登录的不是root的话,所有指令最好都带一个sudo前缀,保证你有足够的权限</p>
<p>依次输入</p>
<pre><code>systemctl stop firewalld
</code></pre>
<pre><code>systemctl disable firewalld
</code></pre>
<p><img src="https://kvrmnks.github.io/post-images/1587643219610.png" alt="" loading="lazy"><br>
这样就把防火墙关掉了~</p>
<p>但是linux还有个叫SELinux的讨厌的东西</p>
<p>编辑/etc/selinux/config文件</p>
<p>再顺便一提,右键powershell就可以粘贴哦~</p>
<p>把对应的一行改成这个</p>
<pre><code>SELINUX=disabled
</code></pre>
<p>保存退出</p>
<p>输入</p>
<pre><code>setenforce 0
</code></pre>
<p>在输入</p>
<pre><code>getenforce
</code></pre>
<p>如果显示Disabled就已经关掉了</p>
<p>如果不行就重启一下虚拟机吧~</p>
<h4 id="安装apache">安装Apache</h4>
<p>输入</p>
<pre><code>yum -y install httpd
</code></pre>
<p>其中它让输yes就输</p>
<p>安装完成后</p>
<p>依次输入</p>
<pre><code>systemctl start httpd
</code></pre>
<p>开启http</p>
<pre><code>systemctl enable httpd
</code></pre>
<p>设置http开机启动<br>
可以输入</p>
<pre><code>systemctl status httpd
</code></pre>
<p><img src="https://kvrmnks.github.io/post-images/1587643230779.png" alt="" loading="lazy"><br>
如果那个running变成了dead,极大的可能是有东西占用了80端口,比如阿里云就会自带nginx占用掉80端口</p>
<p>这个时候,输入</p>
<pre><code>yum install net-tools
</code></pre>
<p>中间可能要输入一次y</p>
<p>完成之后输入</p>
<pre><code>netstat -tlnp|grep 80
</code></pre>
<p><img src="https://kvrmnks.github.io/post-images/1587643242302.png" alt="" loading="lazy"><br>
看到有程序在占用80端口,从右边可以看到进程号为1372,应用是httpd</p>
<p>这个地方由于我已经成功启动了httpd所以显示的是httpd,如果是什么其他的东西,就需要强行把这个应用停止,把80端口让给httpd</p>
<pre><code>kill -9 进程号
</code></pre>
<p>直到80端口不再被占用</p>
<p>这时候</p>
<pre><code>systemctl restart httpd
</code></pre>
<p>重启一下httpd</p>
<h4 id="安装mariadb">安装Mariadb</h4>
<p>输入</p>
<pre><code>yum -y install mariadb-server.x86_64
</code></pre>
<p>顺便一提 Mariadb 是类似mysql开源版本的存在</p>
<p>默认的用户名是root</p>
<p>密码是空的</p>
<p>选它主要原因是开源(<s>国内下载的快</s>)</p>
<p>输入</p>
<pre><code>systemctl start mariadb
</code></pre>
<p>开启服务</p>
<pre><code>systemctl enable mariadb
</code></pre>
<p>设置开机启动</p>
<pre><code>systemctl status mariadb
</code></pre>
<p>查看状态</p>
<h4 id="安装php和php-mysql">安装php和php-mysql</h4>
<pre><code>yum -y install php php-mysql
</code></pre>
<h4 id="安装git">安装git</h4>
<pre><code>yum install git -y
</code></pre>
<h3 id="安装discuz">安装Discuz</h3>
<p>我们用git把Discuz的文件下载下来</p>
<p>Discuz的项目地址在</p>
<p>https://gitee.com/ComsenzDiscuz/DiscuzX</p>
<p>还好不在github...</p>
<p><img src="https://kvrmnks.github.io/post-images/1587643255695.png" alt="" loading="lazy"><br>
一次点击克隆,复制</p>
<p>输入</p>
<pre><code>git clone 你复制到的东西
</code></pre>
<p>回到主目录,输入</p>
<pre><code>ll
</code></pre>
<p>就能看到一个叫DiscuzX的文件夹,<s>当然你有可能看不出它是文件还是文件夹</s></p>
<p>输入</p>
<pre><code>cp -r DiscuzX/upload /var/www/html/upload
</code></pre>
<p>把DiscuzX下的upload文件夹复制到那个奇怪的目录下</p>
<p>那个目录下的东西会被Apache(httpd)给解析成我们熟悉的网页</p>
<p>现在需要给DiscuzX一点权限<br>
依次输入</p>
<pre><code>chmod -Rf 777 /var/www/html/
</code></pre>
<pre><code>chmod -Rf 777 /var/www/html/upload
</code></pre>
<p>打开浏览器,输入</p>
<pre><code>虚拟机的ip地址/upload
</code></pre>
<p><img src="https://kvrmnks.github.io/post-images/1587643265636.png" alt="" loading="lazy"><br>
点我同意</p>
<p><img src="https://kvrmnks.github.io/post-images/1587643271673.png" alt="" loading="lazy"><br>
点下一步*2</p>
<p><img src="https://kvrmnks.github.io/post-images/1587643278921.png" alt="" loading="lazy"><br>
数据库密码调成空(如果你没有手动调整数据库密码的话)</p>
<p>记得填写管理员密码哦~</p>
<p>然后就安完了~</p>
<h3 id="安装wordpress">安装wordpress</h3>
<p>先要整到wordpress的安装包</p>
<p>最近的官网不大友好...</p>
<p>而且由于centos7默认的php的版本太低了也不能装版本过高的wordpress</p>
<p>所以我选了wordpress-v5.0.2-zh_CN.zip</p>
<p>现在要用ssh把这个zip传到虚拟机上</p>
<p>我把这个zip放在了e盘</p>
<p>我用了git带的scp</p>
<p>在e盘右键点击git bush here</p>
<p>输入</p>
<pre><code>scp wordpress-v5.0.2-zh_CN.zip root@192.168.0.107:wordpress-v5.0.2-zh_CN.zip
</code></pre>
<p>在powershell输入ll就能看到传上去的文件了</p>
<p>输入</p>
<pre><code>yum install -y unzip zip
</code></pre>
<p>安装unzip</p>
<p>输入</p>
<pre><code>unzip wordpress-v5.0.2-zh_CN.zip
</code></pre>
<p>解压这个zip包</p>
<p>输入</p>
<pre><code>cp -r wordpress /var/www/html/wordpress
</code></pre>
<p>在浏览器输入</p>
<pre><code>http://ip地址/wordpress
</code></pre>
<p>就能看到wordpress的安装界面了~</p>
<p><img src="https://kvrmnks.github.io/post-images/1587643288461.png" alt="" loading="lazy"><br>
先别急着往下,现在我们要配置一下数据库</p>
<p>回到powershell</p>
<p>依次输入</p>
<pre><code>mysql -uroot
</code></pre>
<p>打开数据库</p>
<pre><code>create database wordpress;
</code></pre>
<p>建立要用的数据库</p>
<pre><code>GRANT ALL ON wordpress.* TO 'wordpressuser'@'%' IDENTIFIED BY &quot;123456&quot;;
</code></pre>
<p>建立该数据库的账户,最后一个双引号换成你要的密码</p>
<p>我这里用的123456</p>
<pre><code>quit
</code></pre>
<p>退出数据库</p>
<pre><code>systemctl restart mariadb
</code></pre>
<p>重启一下数据库</p>
<p>回到浏览器</p>
<p><img src="https://kvrmnks.github.io/post-images/1587643296315.png" alt="" loading="lazy"><br>
依次填表</p>
<p>数据库主机填虚拟机的IP地址</p>
<p>如果你用的是阿里云之类的东西记得开放3306端口(数据库使用)</p>
<p>如果出现这个界面</p>
<p><img src="https://kvrmnks.github.io/post-images/1587643301572.png" alt="" loading="lazy"><br>
回到powershell</p>
<p>输入</p>
<pre><code>vi /var/www/html/wordpress/wp-config.php
</code></pre>
<p>复制网页里的东西</p>
<p>粘贴(记得右键)</p>
<p>退出保存</p>
<p>然后回浏览器,一直往下走就好了~</p>
<p>之后有空再更新如何把wordpress调成多人模式吧~~</p>
<h3 id="参考网址">参考网址</h3>
<p>https://blog.csdn.net/xiehd313/article/details/80814584</p>
<p>https://blog.51cto.com/2382492/2083079</p>
<p>https://www.cnblogs.com/caicaizi/p/9564754.html</p>
<p>https://blog.csdn.net/sky101010ws/article/details/50782475</p>
<p>https://blog.csdn.net/weixin_42591732/article/details/102534262</p>
<p>https://www.cnblogs.com/biaopei/p/11683407.html</p>
<p>https://blog.csdn.net/weixin_42506905/article/details/90339253</p>
<p>https://www.cnblogs.com/lywJ/p/10880332.html</p>
<p>https://www.jianshu.com/p/ad58fd97119e</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[用fft画画]]></title>
        <id>https://kvrmnks.github.io/post/yong-fft-hua-hua/</id>
        <link href="https://kvrmnks.github.io/post/yong-fft-hua-hua/">
        </link>
        <updated>2020-02-06T11:03:17.000Z</updated>
        <summary type="html"><![CDATA[<p>外面疫情严重,只能赋闲在家,闲着也是闲着,来学用fft画画吧</p>
<figure data-type="image" tabindex="1"><img src="https://kvrmnks.github.io/post-images/1587643407396.jpg" alt="" loading="lazy"></figure>
]]></summary>
        <content type="html"><![CDATA[<p>外面疫情严重,只能赋闲在家,闲着也是闲着,来学用fft画画吧</p>
<figure data-type="image" tabindex="1"><img src="https://kvrmnks.github.io/post-images/1587643407396.jpg" alt="" loading="lazy"></figure>
<!--more-->
<p><s>顺便预习一下马上要学的QT</s></p>
<h3 id="fft">fft</h3>
<p>既然要用fft画画当然要会fft的呀,什么你还不会fft?</p>
<p><img src="https://kvrmnks.github.io/post-images/1587643414466.png" alt="" loading="lazy"><br>
如果你不会请去自己学  <s>其实有板子在会不会有什么区别呢</s><br>
这里丢个一直在用的fft板子<br>
复数类板子</p>
<pre><code class="language-cpp">class Complex{
private:
    qreal a,b;
public:
    Complex(qreal a=0,qreal b=0):a(a),b(b){}
    Complex operator * (qreal x)const;
    Complex operator * (const Complex &amp;y)const;
    Complex operator + (const Complex &amp;y)const;
    Complex operator - (const Complex &amp;y)const;
    qreal length()const{
        return sqrt(a*a+b*b);
    }
    qreal real()const{return a;}
    qreal img()const{return b;}
};
Complex operator * (qreal x,Complex y);
Complex Complex::operator*(qreal x) const{
    return Complex(this-&gt;a*x,this-&gt;b*x);
}
Complex Complex::operator*(const Complex &amp;y) const{
    Complex ret(this-&gt;a*y.a-this-&gt;b*y.b,this-&gt;a*y.b+this-&gt;b*y.a);
    return ret;
}
Complex Complex::operator+(const Complex &amp;y) const{
    return Complex(this-&gt;a+y.a,this-&gt;b+y.b);
}
Complex Complex::operator-(const Complex &amp;y) const{
    return Complex(this-&gt;a-y.a,this-&gt;b-y.b);
}
Complex operator * (qreal x,Complex y){
    return y*x;
}
</code></pre>
<p>fft板子</p>
<pre><code class="language-cpp">void fft(QVector&lt;Complex&gt;&amp;data,int n){
    QVector&lt;int&gt; rev(n);
    int R = 0;
    while((1&lt;&lt;(R+1))&lt;=n)R++;
    for(int i=0;i&lt;n;i++)rev[i]=(rev[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(R-1));
    for(int i=0;i&lt;n;i++){
        if(i&lt;rev[i])
            std::swap(data[i],data[rev[i]]);
    }
    qreal pi = acos(-1);
    for(int i=1;i&lt;n;i&lt;&lt;=1){
        Complex w(cos(pi/i),sin(pi/i));
        for(int j=0;j&lt;n;j+=(i&lt;&lt;1)){
            Complex wn(1,0);
            for(int k=0;k&lt;i;k++){
                Complex x=data[j+k],y=wn*data[j+i+k];
                data[j+k]=x+y;
                data[i+j+k]=x-y;
                wn=wn*w;
            }
        }
    }
}
</code></pre>
<p>这里顺便说下绘图的原理,像是在做函数曲线一样,要描点连线<br>
也就是要求一开始要给我一个点列<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>=</mo><mo>(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>)</mo></mrow><annotation encoding="application/x-tex">A[i]=(x_i,y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br>
为了让它fft,需要把这个点列转化到复平面上<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>[</mo><mi>i</mi><mo>]</mo><mo>=</mo><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><msub><mi>y</mi><mi>i</mi></msub><mo>∗</mo><mi>i</mi></mrow><annotation encoding="application/x-tex">A[i]=x_i+y_i*i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span><br>
顺便记点数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span><br>
然后就可以fft了呢<br>
假设生成的数列为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mo>[</mo><mi>i</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">B[i]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">[</span><span class="mord mathdefault">i</span><span class="mclose">]</span></span></span></span><br>
那我们明显有</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>[</mo><mi>j</mi><mo>]</mo><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>∗</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>k</mi><mo>&lt;</mo><mi>n</mi></mrow></munderover><mi>B</mi><mo>[</mo><mi>k</mi><mo>]</mo><mo>∗</mo><msup><mi>e</mi><mrow><mfrac><mrow><mn>2</mn><mi>π</mi><mi>j</mi><mi>i</mi></mrow><mi>n</mi></mfrac><mo>∗</mo><mi>k</mi></mrow></msup></mrow><annotation encoding="application/x-tex">A[j]=\frac{1}{n}*\sum_{k=0}^{k&lt;n}B[k]*e^{\frac{2\pi ji}{n}*k}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.1382260000000004em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.836113em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">&lt;</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.06643em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.06643em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9334714285714286em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>因为每一项都是复数,所以我们可以把它对应到复平面上,这样<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>[</mo><mi>j</mi><mo>]</mo></mrow><annotation encoding="application/x-tex">A[j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>就变成了一系列向量的和,有了明显的几何意义</p>
<h3 id="qt">QT</h3>
<h5 id="安装">安装</h5>
<p>请去清华镜像站下载安装包</p>
<h5 id="用qt绘画">用QT绘画</h5>
<p>好像有两种办法来着<br>
1.QPainter<br>
2.QGraphics<br>
第一种跟java swing那套理论差不多要自己重写绘图事件,鉴于之前就被swing恶心到了,而且这种方式一点都不OOP于是选了第二种<br>
第二种就是<br>
一些基本的图形由QGraphicsItem继承得到<br>
要把这些图形丢到QGraphicsScene里,让它来做排版<br>
然后把QGraphicsScene丢给QGraphicsView让它显示出来就好了呢!<br>
具体的代码在下一节</p>
<h5 id="signal-and-slot">signal and slot</h5>
<p>这个是Qt里新的逻辑呢<br>
简单的用法是</p>
<pre><code class="language-cpp">QObject::connect(发出信号的对象地址,SIGNAL(信号函数),接受信号的对象地址,SLOT(槽函数));
</code></pre>
<p>一旦这样做了之后呢<br>
发出信号的函数一旦发出了信号,接受信号的对象就会立即执行槽函数<br>
跟javafx里的property机制很像呢<br>
举个具体的例子吧</p>
<pre><code class="language-cpp">    QApplication a(argc, argv);
    QGraphicsScene *scene = new QGraphicsScene(0,0,1024,768);
    QGraphicsView *view = new GraphicsView(scene);
    QPushButton *button = new QPushButton(&quot;exit&quot;);
    QObject::connect(button,SIGNAL(clicked()),&amp;a,SLOT(exit()));
    view-&gt;addWidget(button);
    view-&gt;show();
</code></pre>
<p>这样如果按钮被点击了,窗口就会被关闭了</p>
<h5 id="qtimeline">QTimeLine</h5>
<p>毕竟要做出来的是个动画<br>
当然要学学时间轴啦 <s>其实不会也没事呢</s><br>
下面是代码节选</p>
<pre><code class="language-cpp">QTimeLine *time = new QTimeLine(40000);
time-&gt;setFrameRange(0,1024);
QObject::connect(time,SIGNAL(frameChanged(int)),scene,SLOT(next()));
time-&gt;start();
</code></pre>
<p>第一个构造函数里面的参数是时间轴持续的时间,单位毫秒<br>
setFrameRange(int,int)<br>
第一个参数表示每帧耗时多少毫秒 如果填0的话默认每帧40毫秒<br>
第二个参数表示一共有多少帧<br>
注意如果进行着时间超出了一开始构造函数的时间,就停了,当然如果时间到了还没进行完,也会停<br>
那个next()是我定义的函数,作用是描下一个点</p>
<p>到现在为止就已经可以完成整个动画了呢</p>
<figure data-type="image" tabindex="2"><img src="https://kvrmnks.github.io/post-images/1587643425697.jpg" alt="" loading="lazy"></figure>
<h3 id="qt打包">Qt打包</h3>
<p>当你做好了程序想要给小伙伴展示的时候怎么可能简简单单地丢给他们代码呢?<br>
qt打包的方法网上到处都是,我们来说说我犯过的坑吧</p>
<h5 id="提示无法定位到q5guidll类">提示无法定位到Q5Gui.dll类</h5>
<p>可能你的打包程序出了锅,你可以尝试ProcessExplorer然后把程序调用的dll自己挑过去</p>
<h5 id="0x000000007b-大约长这样子~">0x000000007b 大约长这样子~</h5>
<p>当你好不容易找全了dll,却发现了这么个错这是为啥呢</p>
<p><img src="https://kvrmnks.github.io/post-images/1587643431546.jpg" alt="" loading="lazy"><br>
经过我漫长的调试,发现原因是我在qtcreator里编译是用的qt自带的gcc<br>
但是打包时我用的是dev里的cpp<br>
因为我原来在用gcc的时候把dev的gcc在环境变量里优先度提得太高了<br>
于是打包的时候gcc自动用了dev的,导致版本不一致<br>
于是在环境变量设置里把qt的gcc优先度调到最高就好了呢</p>
<figure data-type="image" tabindex="3"><img src="https://kvrmnks.github.io/post-images/1587643436909.gif" alt="" loading="lazy"></figure>
<h3 id="项目代码">项目代码</h3>
<p>我放到github上了<br>
<a href="https://github.com/kvrmnks/FFt-drawing">链接</a></p>
]]></content>
    </entry>
</feed>