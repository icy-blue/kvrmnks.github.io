<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kvrmnks.github.io</id>
    <title>Kvrmnks` blog</title>
    <updated>2020-07-29T15:48:29.030Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://kvrmnks.github.io"/>
    <link rel="self" href="https://kvrmnks.github.io/atom.xml"/>
    <subtitle>power overwhelming</subtitle>
    <logo>https://kvrmnks.github.io/images/avatar.png</logo>
    <icon>https://kvrmnks.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Kvrmnks` blog</rights>
    <entry>
        <title type="html"><![CDATA[从零开始的解析HWDB1.1数据之路.md]]></title>
        <id>https://kvrmnks.github.io/post/cong-ling-kai-shi-de-jie-xi-hwdb11-shu-ju-zhi-lu-md/</id>
        <link href="https://kvrmnks.github.io/post/cong-ling-kai-shi-de-jie-xi-hwdb11-shu-ju-zhi-lu-md/">
        </link>
        <updated>2020-07-29T14:51:51.000Z</updated>
        <summary type="html"><![CDATA[<p>本文旨在为自身后日回忆<s>并非用于教学</s></p>
]]></summary>
        <content type="html"><![CDATA[<p>本文旨在为自身后日回忆<s>并非用于教学</s></p>
<!--more-->
<p>本文强烈建议使用jupyter lab</p>
<hr>
<h3 id="第一步-得到数据集">第一步 得到数据集</h3>
<p><s>不说了</s></p>
<hr>
<h3 id="第二步-解析一个文件">第二步 解析一个文件</h3>
<p>就来解析这个叫“1001-c.gnt”的文件吧</p>
<p>官网上有具体的文件格式</p>
<p>简单来说是，一个这样的文件中包含了多个图片</p>
<p><s>直接上代码好了</s></p>
<pre><code class="language-python">import numpy as np
import struct
def load_raw_data(id):
    path = '../HWDB1.1trn_gnt/' + str(id) + '-c.gnt'
    file = open(path, 'rb')
    features = []
    labels = []
    while file.read(1) != '':
        file.seek(-1, 1)
        buf = file.read(4)
        if len(buf) != 4:
            break
        length_bytes = struct.unpack('&lt;I', buf)[0]
        tag_code = file.read(2)
        width = struct.unpack('&lt;H', file.read(2))[0]
        height = struct.unpack('&lt;H', file.read(2))[0]
        content = file.read(height*width)
        img = np.frombuffer(content, dtype=np.uint8).reshape(height,width)
        features.append(img)
        labels.append(char_dict[tag_code.decode('gb2312')])
    return np.array(features), np.array(labels)
</code></pre>
<p>char_dict就不放在这里了，太长了</p>
<p>这个函数的第一个返回值是一个ndarray，每个元素是一个灰度图片</p>
<p>第二个返回值是labels数组代表了每个图片分别属的类别</p>
<p>然后随便说一些细节吧</p>
<ol>
<li>每次读完一个图片之后通过</li>
</ol>
<pre><code class="language-python">if len(buf) != 4:
	break
</code></pre>
<p>来判断文件是不是读完了</p>
<ol start="2">
<li>中文编码是gb2312格式的</li>
<li>读入文件的时候用np.frombuffer会快一点，尽量不要一个一个像素的读，py的速度太拉胯了</li>
<li>dtype=np.uint8 可以极限省内存</li>
</ol>
<hr>
<h3 id="第三步-看看图片长啥样">第三步 看看图片长啥样</h3>
<pre><code class="language-python">import matplotlib.pyplot as plt
features, labels = load_raw_data(1001)
plt.imshow(features[0])
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://kvrmnks.github.io/post-images/1596034371418.jpg" alt="" loading="lazy"></figure>
<p>同样也可以输出图片的大小</p>
<pre><code class="language-python">print(features[0].shape)
</code></pre>
<p>如果你多看几张图片的话就会发现，基本上每张图片的大小都是不一样的，这显然(显然吗？)不能直接用，我们需要先把图片都转换成一样的大小</p>
<hr>
<h3 id="第四步-图片处理">第四步 图片处理</h3>
<p>以将图片最终转换成32*32为例</p>
<h4 id="偷工减料的方法">偷工减料的方法</h4>
<p>pyTorch 有个叫做AdaptiveAvgPool2d的东西<br>
导入pytorch的相关东西</p>
<pre><code class="language-python">import torch.nn as nn
import torch
ft = nn.AdaptiveAvgPool2d((32, 32))
</code></pre>
<p>为了使用pytorch就必须把原来图片的numpy形式转换成pytorch使用的Tensor形式<br>
还要注意把数据格式改成float格式才能作为参数传到网络里<br>
最后还要注意添加一维作为通道维<br>
反正挺烦的</p>
<pre><code class="language-python">img = torch.from_numpy(features[0])
img = torch.from_numpy(features[0]).float().view(1, features[0].shape[0], features[0].shape[1])
new_img = ft(img)
</code></pre>
<p>可以再输出一下img的大小</p>
<pre><code class="language-python">print(img.shape)
</code></pre>
<p>可以发现变成了(1, 32, 32)，第一个1是指一个通道，不了解也没关系(<br>
把图片plot出来看看</p>
<pre><code class="language-python">plt.imshow(new_img[0])
</code></pre>
<p><img src="https://kvrmnks.github.io/post-images/1596035144870.jpg" alt="" loading="lazy"><br>
虽然大小对了，但是图像完全走样了...</p>
<h4 id="手工缩放图像">手工缩放图像</h4>
<p>没想到好的办法，只能手动缩放了，这里主要使用了PIL的Image模块</p>
<pre><code class="language-python">from PIL import Image
</code></pre>
<p>幸运的是，Image可以通过numpy的ndarray直接生成灰度图</p>
<pre><code class="language-python">img = Image.fromarray(features[0])
</code></pre>
<p>假设我们想把图片转换成高h宽w（假设图片的原来大小为高x宽y）<br>
不妨假设h=w=0好了<s>好萌啊</s><br>
我们就能得到图片的缩放比例</p>
<pre><code class="language-python">h,w = 32,32
x,y = features[0].shape
ratio = min(h/x, w/y)
</code></pre>
<p>然后通过PIL来进行图片的缩放</p>
<pre><code class="language-python">x,y = int(ratio*x), int(ratio*y)
img = img.resize((y,x), Image.ANTIALIAS)
</code></pre>
<p>resize的第一个参数是指要变换后的大小, <strong>这里有个坑点，排在前面的是width</strong><br>
第二个参数是指插值方法<br>
如果你不知道到底做的对不对可以通过</p>
<pre><code class="language-python">print(img.size) # 查看图片的大小
img.show() # 康康图片长啥样
</code></pre>
<p>最后我们要把图片补成高h宽w（为什么还要补原因自己想去<br>
没有太好的方法，我们就采用一种奇技淫巧<br>
先创建一张空图</p>
<pre><code class="language-python">new_img = Image.new('L',(w, h), 255)
</code></pre>
<p>'L'代表为灰度图，第二个参数依旧是<strong>width在前面</strong>，255表示每个像素点都是255即白色<br>
然后我们把之前resize的图片粘到这张空图的中间</p>
<pre><code class="language-python">x,y = int((h-x)/2), int((w-y)/2)
new_img.paste(img, (y, x))
</code></pre>
<p>paste的第二个参数表示img的左上角处于哪个位置，<strong>width在前</strong><br>
最后只需要从Image转会ndarray就好了</p>
<pre><code class="language-python">arr = np.asarray(new_img)
plt.imshow(arr)
</code></pre>
<p>发现效果好多了<br>
<img src="https://kvrmnks.github.io/post-images/1596036378417.jpg" alt="" loading="lazy"></p>
<hr>
<h3 id="一些补充">一些补充</h3>
<p>在缩放图片的时候可以引入一些随机因素，来提高模型的泛化能力<br>
比如, 让图片不一定被放缩到最大</p>
<pre><code class="language-python">h,w = 32,32
x,y = features[0].shape
ratio = min((h-np.random.randint(3,5))/x, (w-np.random.randint(3,5))/y)
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[JS传递canvas图片与Python后端Flask交互]]></title>
        <id>https://kvrmnks.github.io/post/js-chuan-di-canvas-tu-pian-yu-python-hou-duan-flask-jiao-hu/</id>
        <link href="https://kvrmnks.github.io/post/js-chuan-di-canvas-tu-pian-yu-python-hou-duan-flask-jiao-hu/">
        </link>
        <updated>2020-07-29T12:02:50.000Z</updated>
        <summary type="html"><![CDATA[<p>其实这东西是尝试把Neural Model部署在网页上时摸索的</p>
]]></summary>
        <content type="html"><![CDATA[<p>其实这东西是尝试把Neural Model部署在网页上时摸索的</p>
<!--more-->
<h3 id="第一步-先整个canvas">第一步 先整个canvas</h3>
<pre><code class="language-html">&lt;canvas&gt; &lt;/canvas&gt;
</code></pre>
<p><s>好了</s></p>
<h3 id="第二步-把canvas里的图片整下来">第二步 把canvas里的图片整下来</h3>
<p>必须要获得canvas的内容才能发到服务器呀<br>
这里推荐canvas 的dom对象自带的toDataUrl()函数</p>
<pre><code class="language-js">let canvas = document.getElementById('这里写你的canvas的id')
let url = canvas.toDataUrl('Image/png')
</code></pre>
<p>这个方式的参数是可选的，会把canvas的内容进行不同的编码，在进行base64加密<br>
如果不写的话默认是转化成png格式</p>
<h3 id="第三步-把图片url-post到服务器">第三步 把图片url POST到服务器</h3>
<p>这里就简单地用JQuery的POST就好了，别扯乱七八糟的了。<br>
JQuery头部</p>
<pre><code class="language-html">&lt;script src=&quot;https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js&quot;&gt;&lt;/script&gt;
</code></pre>
<p>POST的使用方法</p>
<pre><code class="language-js">$.post(
    url,
    data,
    func(data, status)
)
</code></pre>
<p>其中url代表要POST到的地址，可以写相对地址的哦。<br>
data是一个字典，代表你要传的内容，这里默认是以text的方式传，不是JSON。<br>
func(data, status) 代表相应之后的回调函数，data表示收到的数据，status代表响应状态。</p>
<p>网页就写完了呢~</p>
<h3 id="第四步-flask-怎么处理-post的数据呢">第四步 Flask 怎么处理 POST的数据呢</h3>
<p>这里要对应上文的一句话 “data是一个字典，代表你要传的内容，这里默认是以text的方式传，不是JSON。”<br>
这里传的是text而不是JSON，Flask的response对于两种类型有着不同的解析方式，这里只介绍text的情况。</p>
<pre><code class="language-python">from Flask import response
data = response.form['POST是字典的Key']
</code></pre>
<p>看起来挺简单的</p>
<h3 id="第五步-传过来的是图片url我咋把它转成图片啊">第五步 传过来的是图片Url我咋把它转成图片啊</h3>
<h4 id="第一小步-把url先解个码转成二进制">第一小步 把Url先解个码，转成二进制</h4>
<pre><code class="language-python">import urllib
data = urllib.request.urlopen(URL)
</code></pre>
<p>就完了，是不是很简单~</p>
<h4 id="第二小步-把二进制转成图片">第二小步 把二进制转成图片</h4>
<p>这里图片使用的是PIL模块<br>
加载PIL的Image</p>
<pre><code class="language-python">from PIL import Image
</code></pre>
<p>然后就能发现Image有个frombytes方法可以从二进制生成图片，但是需要图片大小，这谁知道啊。<s>其实可以从网页发一个呀2333</s></p>
<p>如果你再探索一下就能发现一个令人迷惑的现象，你可以把二进制写成图片，然后用Image读文件生成图片。</p>
<p>那岂不是每次都要做一次文件读写？<br>
当然有方法避免，io.ByteIO()可以提供一个bytes流来模拟文件<br>
使用方法如下</p>
<pre><code class="language-python">    buffer = io.ByteIO()
    buffer.write(你的二进制数据)
    img = Image.open(buffer)
</code></pre>
<p>就好了</p>
<h3 id="第六步-我咋知道图片是什么格式我转格式啊有什么坑啊">第六步 我咋知道图片是什么格式，我转格式啊，有什么坑啊</h3>
<p>关于图片的模式可以通过img.mode查看<br>
已知png图片为RGBA，jpeg图片为RGB<br>
一般转格式都已可以通过convert 但是<br>
把RGBA转成RGB或者灰度图的时候有坑，如果直接通过上面的方法会直接丢失掉透明度，即A<br>
这里还有个迷惑行为是chrome中黑色有的时候用透明度维度表示</p>
<p>然后就没了~</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[机器学习基础大作业进程~更新中]]></title>
        <id>https://kvrmnks.github.io/post/ji-qi-xue-xi-ji-chu-da-zuo-ye-jin-cheng-~geng-xin-zhong/</id>
        <link href="https://kvrmnks.github.io/post/ji-qi-xue-xi-ji-chu-da-zuo-ye-jin-cheng-~geng-xin-zhong/">
        </link>
        <updated>2020-07-28T07:07:32.000Z</updated>
        <content type="html"><![CDATA[<h3 id="简介">简介</h3>
<p>机器学习基础课为什么要安排一个深度学习的作业？</p>
<h3 id="大事记录"><s>大事</s>记录</h3>
<h4 id="20200728之前">20200728之前</h4>
<ul>
<li>把Anaconda的环境搭建好了，一定记住安装一些类似于pyTorch的模块时一定要去官网找到正确的姿势。</li>
<li>还用了Anaconda的虚拟环境，除了有点占用硬盘以外，都挺好的。<br>
<img src="https://kvrmnks.github.io/post-images/1595920396482.jpg" alt="不也挺好吗？" loading="lazy"></li>
<li>简单的试了试把环境搭好，读了读数据集和测试集，试了试LeNet，发现好像可以识别1000种汉字？不过还没进行泛化实验</li>
</ul>
<h4 id="20200728">20200728</h4>
<ul>
<li>尝试把测试集的格式直接存成numpy。<br>
存个啥，发现了正确的读数据的方式，比原来一个一个像素读快到不知道哪里去了</li>
</ul>
<pre><code class="language-python">content = file.read(height*width)
img = np.frombuffer(content, dtype=np.uint8).reshape(height,width)
</code></pre>
<p>注意从byte 转 numpy 要用 np.formbuffer()</p>
<ul>
<li>尝试进行图片大小的robust，计划直接按比例缩放，之前用的pyTorch自带的AdaptAvePool<br>
用PIL的库写好了</li>
<li>跑了跑LeNet 全集</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ubuntu 上的 mysql + pymysql + screen]]></title>
        <id>https://kvrmnks.github.io/post/ubuntu-shang-de-mysql-pymysql/</id>
        <link href="https://kvrmnks.github.io/post/ubuntu-shang-de-mysql-pymysql/">
        </link>
        <updated>2020-07-14T08:32:59.000Z</updated>
        <content type="html"><![CDATA[<p>安装mysql</p>
<pre><code>apt install mysql-server
apt install mysql-client
</code></pre>
<p>然后先看 mysql 的版本, 一定要注意版本<br>
不同版本的 mysql 改密码的方式是不同的<br>
比如 mysql8.0 的情况下</p>
<pre><code>use mysql;
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '你的新密码'
</code></pre>
<p>退出即可</p>
<p>当然可能不知道一开始的密码</p>
<pre><code>vim /etc/mysql/debian.cnf
</code></pre>
<pre><code>screen -S 名字
</code></pre>
<pre><code>ctrl+a     d 离开当前
</code></pre>
<pre><code>screen -r 名字恢复
</code></pre>
<pre><code>Debian平台的my.cnf
在/etc/mysql/mysql.conf.d/mysqld.cnf
</code></pre>
<pre><code>wait_timeout=31536000
interactive_timeout=31536000
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[方差]]></title>
        <id>https://kvrmnks.github.io/post/fang-chai/</id>
        <link href="https://kvrmnks.github.io/post/fang-chai/">
        </link>
        <updated>2020-05-31T05:43:52.000Z</updated>
        <content type="html"><![CDATA[<!--more-->
<p><img src="https://kvrmnks.github.io/post-images/1590903931832.png" alt="" loading="lazy"><br>
先咕掉题解, 只贴代码吧</p>
<pre><code class="language-cpp">#include&lt;bits/stdc++.h&gt;
using namespace std;
const int MOD = 1000000007;
const int MAXN = 1000005;
typedef long long ll;
int n,data[MAXN],inv[MAXN],fac[MAXN],ifac[MAXN];
int sum,qsum;
int comb(int n,int m){
    return (((ll)fac[n]*(ll)ifac[m])%MOD*(ll)ifac[n-m])%MOD;
}
int main(){
    scanf(&quot;%d&quot;,&amp;n);
    for(int i=1;i&lt;=n;i++)scanf(&quot;%d&quot;,data+i);
    inv[0]=inv[1]=fac[0]=ifac[0]=fac[1]=ifac[1]=1;
    for(int i=1;i&lt;=n;i++){
        sum = (sum+data[i])%MOD;
        qsum = (qsum + ((ll)data[i]*(ll)data[i])%MOD)%MOD;
    }
    for(int i=2;i&lt;=n+1;i++){
        inv[i]=((ll)(MOD-MOD/i)*inv[MOD%i])%MOD;
        fac[i] = ((ll)fac[i-1]*(ll)i)%MOD;
        ifac[i] = ((ll)ifac[i-1] * (ll)inv[i])%MOD;
    }
    int ans=0;
    for(int i=0;i&lt;n;i++){ans=(ans+((ll)comb(n-1,i)*(ll)inv[i+1])%MOD)%MOD;}
    ans=((ll)ans*(ll)qsum)%MOD;
    for(int i=1;i&lt;=n;i++){
        ll tmp = 0;
        tmp = (comb(n-1,i-1) * (ll)qsum)%MOD;
        if(i&gt;=2)
            tmp =(tmp + ((ll)comb(n-2,i-2)*(ll)((((ll)sum*(ll)sum)%MOD-qsum)%MOD+MOD)%MOD)%MOD)%MOD;
        tmp = (tmp * (ll)(inv[i]))%MOD;
        tmp = (tmp * (ll)(inv[i]))%MOD;
        ans = (ans - tmp)%MOD;
        ans = (ans + MOD)%MOD;
    }
    printf(&quot;%d&quot;,ans);
    return 0;
}

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[彼可取而代之]]></title>
        <id>https://kvrmnks.github.io/post/bi-ke-qu-er-dai-zhi/</id>
        <link href="https://kvrmnks.github.io/post/bi-ke-qu-er-dai-zhi/">
        </link>
        <updated>2020-05-18T10:51:56.000Z</updated>
        <summary type="html"><![CDATA[<p>说起彭院长, 最令我印象深刻的便是这句话, &quot;彼可取而代之&quot;.</p>
]]></summary>
        <content type="html"><![CDATA[<p>说起彭院长, 最令我印象深刻的便是这句话, &quot;彼可取而代之&quot;.</p>
<!--more-->
<p>长久以来, 我一直迷惑于目标与梦想, 还记得从小学开始, 班主任或者任课老师就会敦促我们立下计划, 思考未来, 想想20年后的世界, 许下未来的约定.<br>
迷惑于目标与梦想, 这句话听起来蛮中二的呢.<br>
现在总有人说要把自己丢出舒适圈, 去体验一下不一样的生活和挑战.<br>
未知带给我们的除了好奇还有危险.<br>
大概安于现状也是一种梦想吧.<br>
就像这个时刻, 刚刚完成了第三个大作业的一个短暂的闲暇时光.<br>
这个期间一直在想这样的问题.<br>
我到底想要什么, 我到底怎么样得到我想要的东西.<br>
这也是一个蛮中二的问题呢.<br>
我回想起了哲学, 世界观, 方法论.<br>
如果漫无目的的生存, 岂不是失去了灵魂.<br>
如果在没有航灯的夜晚, 到底该怎么行走.</p>
<blockquote>
<p>啊，留下一条路等改日再见！<br>
但我知道路径延绵无尽头，<br>
恐怕我难以再回返。<br>
也许多少年后在某个地方，<br>
我将轻声叹息把往事回顾，<br>
一片树林里分出两条路，<br>
而我选了人迹更少的一条，<br>
因此走出了这迥异的旅途。</p>
</blockquote>
<p>我不知道能否找到那条路.<br>
一条即使是自己不回头也能走下的路.<br>
一直走下的路.<br>
自己选择的路...<br>
跪着也要走完吗...<br>
该如何让自己的文风看起来不是那么中二呢...<br>
该如何知道自己到底是不是走在正确的道路上.</p>
<blockquote>
<p>去改变<br>
既然如此那就去改变呀</p>
</blockquote>
<p>能否有一天窥测到神的领域.</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[小E的故事]]></title>
        <id>https://kvrmnks.github.io/post/xiao-e-de-gu-shi/</id>
        <link href="https://kvrmnks.github.io/post/xiao-e-de-gu-shi/">
        </link>
        <updated>2020-05-10T14:59:38.000Z</updated>
        <summary type="html"><![CDATA[<p>梦寐以求地写了故事</p>
]]></summary>
        <content type="html"><![CDATA[<p>梦寐以求地写了故事</p>
<!--more-->
<p>E：“我就是一个普通的学生。”<br>
E：“一个没有加入任何社团，没有担任任何班级职务的普通的大三学生。”<br>
E：”平日里我最喜欢干的事，便是漫步在花园中，不带任何思考，静静地感受着这一切的美丽，如果世间的万物都想这些花一样纯洁美丽该有多好。有事我会在显微镜下与细胞幽会，看着这些单纯地却又是万物之始的生物，静静地思考。”<br>
E：“我讨厌那些所谓的达官显贵，那些不就是在学生会里任一个破烂职位就沾沾自喜，甚至轻易命令别人的人，我讨厌那些靠着和老师讨好关系从而得到成绩上优惠的人，当然我也讨厌那些这样做的老师。“<br>
E：“但令人可笑的是，那些所谓的宣传榜上，全都是这些人的身影。“<br>
E：“像是过家家一样的，过着大家认为是对的生活就好了嘛。“<br>
E：“可怜的学校，养了这么一帮只知道排位置的废物。“<br>
G：“我说啊，你可别这么中二下去了。“<br>
G：“在这么下去，到了社会怕是活不过1年。“<br>
E：“你懂什么，就是因为你们这些人都这么想，这个社会才这么腐烂。“<br>
G：“就这？你给这个社会做什么贡献了吗，就平白无故骂这骂那。“<br>
G：“你这种人，有什么用，帮不了别人帮不了社会，你存在到底有什么意义。“<br>
E：“你给我等着，我就算是没有什么用，我也不会让他们好过的。“<br>
E：“我迟早要让你看到，那帮人到底有多无能。“</p>
<p>C：“学弟，我听说你很久了。“<br>
E：“哦？我何德何能让你能记住我的名字？“<br>
C：“学弟啊，不瞒你说，我也不喜欢我们学校里的那些叫兽们。“<br>
E：“挺有趣的呀，说来听听？“<br>
C：“其实吧，最近我和几个人在谋划一件事情，你也知道最近四六级考试快到了吧。“<br>
E：“嗯“<br>
C：“你看现在国家对这件事这么看重，监考那么严，要是考试过程中出了什么事故，那些老师肯定不好受。“<br>
E：“是呀，所以？“<br>
C：“所以我们想大家一起搞个作弊事件，还能收点钱不是挺好？“<br>
E：“不好意思，我对钱不感兴趣。“<br>
C：“等等，你想想，如果这些老师因为这事被罚了，不是很好吗？“<br>
E：“嗯，这些老师也是好日子呆够了，早晚找到机会就去治他们。“<br>
C：“你看，这不就是个好机会吗，你这么等下去你马上就毕业了，没机会了呀。“<br>
E：“嗯…“<br>
C：“这样吧，我把电话给你，你什么时候有了想法就跟我打电话。“</p>
<p>G：“哟，怎么找，当代鲁迅回来了？“<br>
G：“看你这副样子，又找到实现你的人生理想的办法了？“<br>
E：“…”<br>
G：“跟你说了，早点放弃你那些狗屁想法，老老实实回来，好好适应社会，现在社会就是这副样子，逆之者亡，顺之者昌。”<br>
E：“弱智。”（推门离开）<br>
G：“哎”</p>
<p>E：“你好，我是刚才那个人”<br>
C：“怎么想明白了？”<br>
E：“嗯，说吧，要我怎么干”<br>
C：“好，明天晚上，校门外面的酒店206，我们等着你”</p>
<p>A：“大家都来齐了，服务员，来上菜吧”<br>
B：“我联系到了大约20个人要买我们的合作。”<br>
C：“我这里拉到了E帮我们做答案。”<br>
A：“E，先说好了，这件事情要是败露了，我们可不会负责的。”<br>
E：“嗯，我明白的。”<br>
A：“好，我弄到了无线电发送和接收装置。”<br>
A：“考试的时候，我们在学校附近开个房间，C和E你们负责收发答案，我和B检查设备情况。”<br>
C：“那，你说这钱怎么分呀….”<br>
A：“害，这钱我们3，3，2，2来分，我和B三，你看怎么样？”<br>
C：“好，大哥果然阔气。”<br>
A：”哈哈，来菜都差不多上齐了，我们开吃开吃，等着票干完了，我们就去这里最好的酒店好好吃上一顿。”</p>
<p>（饭局结束）<br>
E：“呵，搞了半天，这些人也没一个正常人。”<br>
E：“不过也就是写追逐利益的匹夫。”<br>
E：“今天就不会学校了吧，学校那种地方怎么样都好吧。”</p>
<p>E：“去找个地方练练46级的英语题吧，毕竟也好久没做了。”</p>
<p>（考试那天）<br>
G：“这小子，那天我说了他一顿之后怎么连宿舍也不回了。”<br>
H：“随他便把，我们还八不得他死在外面呢。”<br>
G：“也是呢。”</p>
<p>A：“我这里显示信号发送器工作正常，B你那边的接收器情况怎么样？”<br>
B：“有一部分好像没连上，A你租个这么远的宾馆干啥呀，学校旁边不是有更近的吗”<br>
A：“这不是手头没钱吗，下次，等我们这次结束就好了。”<br>
A：“外面好像有根铁丝，你去做个天线试试看”<br>
E：“我来吧，我正好研究过一点这个。”<br>
B：“快点啊，40w呐”<br>
B：“好了好了，没想到你小子果然有一手呀，下次哥几个肯定忘不了你。”<br>
E：（“弱智”）<br>
C：“E你快过来，试题传过来了”<br>
E：“好好好”<br>
C：“你小子有实力呀，做的这么快，没想到我碰见了个神仙。”<br>
E：（“不是说你之前听说过我吗，果然仅仅是仅仅是….”）<br>
B：“嗯？怎么现在信号又有一点不好呢？”<br>
A：“你干脆稍微站出去一点吧，这样信号可能稍微好点。“<br>
B：“好来好来，辛苦这一次，幸福一辈子呀。“<br>
A：“你说的没错。“<br>
E：(“呵呵，不过是一群只知道钱的人“）<br>
C：“快点，别看他们了，快点做题。“<br>
E：“已经做完了。“<br>
E：“已经足够了吧，已经能够让那些老师铭记终生了吧，我头有些疼，我先回去了。“<br>
A：“钱呐，不要了吗“<br>
E：“没事，不要了。“<br>
A：“好好咱碰上了弱智。“<br>
E：“弱智“（推门离开）</p>
<p>E：“嗯？怎么这里有这么多警察，路上有这么多警车。“<br>
E：“哦，这样吗“<br>
E：“走吧，回去吧，反正都达到了，已经完成了惊天动地的事情了呢，已经能证明那些人都是废物了。“<br>
E走回了房间，这时F打开了门<br>
F：“你好，我们是警察，这是你们分给考试的信号接收器吧，我们根据无线电定位了你们的位置，现在我们希望你们跟我们走一趟，配合调查。“</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[程设大作业2-markdown编辑器]]></title>
        <id>https://kvrmnks.github.io/post/cheng-she-da-zuo-ye-2-markdown-bian-ji-qi/</id>
        <link href="https://kvrmnks.github.io/post/cheng-she-da-zuo-ye-2-markdown-bian-ji-qi/">
        </link>
        <updated>2020-04-28T14:15:17.000Z</updated>
        <summary type="html"><![CDATA[<p>建一篇blog记录一下进度</p>
]]></summary>
        <content type="html"><![CDATA[<p>建一篇blog记录一下进度</p>
<!--more-->
<h4 id="2020-4-28">2020-4-28</h4>
<p>起步<br>
试图安装双系统，失败<br>
用虚拟机的Qt有点辣眼睛<br>
简单学了一下Qt基本内容，试了试QSocket</p>
<h4 id="2020-5-02">2020-5-02</h4>
<p>今天又收获了好多好多的坑呢</p>
<h5 id="markdown-html">markdown-&gt;html</h5>
<p>https://github.com/hoedown/hoedown<br>
纯c手写，clone之后直接nmake一下，调用方法的话写 hoedown.exe -h 就好啦</p>
<h5 id="nmake-相关">nmake 相关</h5>
<p>这个东西是Vs自带的，也就是说要装一个Vs<br>
用everything 找 nmake.exe<br>
然后注意这个的环境变量设置<br>
要一个INCLUDE和LIB 都找一下<br>
有的可能缺kernel32在LIB下找一下</p>
<h5 id="webenginewidgets-中的-qwebengineview">webenginewidgets 中的 QWebEngineView</h5>
<p>这个需要编译器是MSVC 2015+大约<br>
然后只需要setHtml + show就好了<br>
别忘记show</p>
<h5 id="资源文件相关">资源文件相关</h5>
<p>资源文件是直接编译进exe的所以只可读<br>
资源文件的格式只有（目前发现）QFile能解析</p>
<h5 id="资源文件的地址转绝对地址">资源文件的地址转绝对地址</h5>
<p>建一个虚拟文件目录 QTemporaryDir<br>
const QString tmp = mainDir-&gt;path()+&quot;/hoedown.exe&quot;;<br>
QFile::copy(&quot;:/new/prefix1/project/hoedown.exe&quot;,tmp）；<br>
然后把资源目录的文件复制进去<br>
就可以用tmp访问了</p>
<h5 id="文件读写">文件读写</h5>
<pre><code class="language-cpp">    QFile out(&quot;dududusdshdksjhdksout.txt&quot;);
    if(out.open(QIODevice::WriteOnly)){
       QTextStream ts(&amp;out);
        ts&lt;&lt;textTextEdit-&gt;toPlainText();
        process-&gt;start(mainDir-&gt;path()+&quot;/hoedown.exe --all-block --all-span --all-flags &quot;+&quot;dududusdshdksjhdksout.txt&quot;);
    }else{
        qDebug(&quot;wrong&quot;);
    }
</code></pre>
<h5 id=""></h5>
<h5 id="如何调用外部的exe">如何调用外部的exe</h5>
<p>QProcess<br>
https://blog.csdn.net/wzj0808/article/details/79367314</p>
<h5 id="qprocess-中stdout的文件编码">QProcess 中stdout的文件编码</h5>
<p>https://blog.csdn.net/liukang325/article/details/80986472</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[人口流量预测比赛的反思]]></title>
        <id>https://kvrmnks.github.io/post/ren-kou-liu-liang-yu-ce-bi-sai-de-fan-si/</id>
        <link href="https://kvrmnks.github.io/post/ren-kou-liu-liang-yu-ce-bi-sai-de-fan-si/">
        </link>
        <updated>2020-04-28T13:58:21.000Z</updated>
        <summary type="html"><![CDATA[<p>嘛，第一次参加这样的比赛，总该记录一下问题和反思吧</p>
]]></summary>
        <content type="html"><![CDATA[<p>嘛，第一次参加这样的比赛，总该记录一下问题和反思吧</p>
<!--more-->
<h2 id="总结">总结</h2>
<p>现在B榜还没结束，估计这篇blog发出来就结束了（<br>
参赛队员3个19级，1个18级<br>
我这里负责写模型的代码<br>
比赛时间大约2个月<br>
每天占用的时间还是挺长的<br>
中间也学了挺多东西<br>
目前排名大约是rk150~200左右，成绩打败了2/3的baseline，一共3个baseline<br>
总成绩在前17%<br>
情况并不是太好，或者更加精确的说我也不知道这样的结果是好还是不好。<br>
第一次参加比赛，虽然有这样或者那样的理由可以推脱，但是也不能不总结吧。</p>
<p>所以站在学习的角度来说<br>
这次比赛的意义还是非常大的，效果也是非常好的，也学到了py，pytorch，pandas，numpy一些东西。</p>
<p>站在比赛的角度来说可以说是十分糟糕<br>
以至于我一直想要早早结束这个比赛</p>
<h2 id="反思">反思</h2>
<h3 id="baseline问题">baseline问题</h3>
<p>没有去看别人的baseline，或是没有太关注baseline的做法，不可否认的是baseline在得分不算太低的时候，是选手争先效仿的，也就是说效果至少还可以，我直接忽视了这里，不仅没有好好思考为什么baseline能做到这样的效果，而且根本没有粗略的看完全部的baseline。</p>
<h3 id="模型上一些缺失和替代问题">模型上一些缺失和替代问题</h3>
<p>在阅读文献和别人的代码的时候出现了一些没有在意的地方，还有一些不知道怎么做，却用一些方法糊弄过去的时候，<s>虽然糊弄过去之后反而效果更好一点</s>，一些参数比如优化器，学习率，误差函数没能做到完全一致，在后期增加了调试的复杂度。</p>
<h3 id="没有做好后手">没有做好后手</h3>
<p>rt，一直在做一个paper，而且别的paper也并没有深刻的评估，这个问题倒不是主观上的问题。</p>
<h3 id="模型转化上">模型转化上</h3>
<p>盲目转换，没有考虑到内部的误差，当然这也不是主观上的问题，而且重要的一点是，我怀疑转化这一步的误差，团队里并没有一致认清。</p>
<h3 id="交流上的问题">交流上的问题</h3>
<p>一开始在交流的时候没能给每个人分配好任务，前期浪费了一点时间，毕竟对于新手来说给一个plan去做，比自己dfs效果要好一点。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[你是否还能假装自己是别人呢]]></title>
        <id>https://kvrmnks.github.io/post/ni-shi-fou-huan-neng-jia-zhuang-zi-ji-shi-bie-ren-ni/</id>
        <link href="https://kvrmnks.github.io/post/ni-shi-fou-huan-neng-jia-zhuang-zi-ji-shi-bie-ren-ni/">
        </link>
        <updated>2020-04-04T12:07:44.000Z</updated>
        <summary type="html"><![CDATA[<p>久违的<s>吹水</s>又来了!</p>
]]></summary>
        <content type="html"><![CDATA[<p>久违的<s>吹水</s>又来了!</p>
<!--more-->
<p>最近一段时间还真是又辛苦又痛苦呢.</p>
<p>不知不觉又到4月了, 和数字9一样, 给人的总是一个突变的感觉. 到了四月才发觉现在已经不是上一年, 到了9月才意识到原来一年已经悄悄过去了一半.</p>
<p>总是有这样或者那样的意识上的突变, 19岁的人看起来还不是那么大, 但是21岁的年龄却又看起来那么成熟.</p>
<p>还记得小时候玩的&quot;美食大战老鼠&quot;, 6级的美食到7级的美食总是一道那么大的门槛...</p>
<p>3~4年前的我还能在看番时热泪盈眶, 现在反而做不到了呢. 现在反而开始喜欢一些有深度的作品, 一些清新的作品. 换个文艺一点的说法, 是想诗一样的作品呢.</p>
<p>闲暇时, 我思考了一下为什么会有这样的变化, 我发现, 现在的我似乎没法将自己很好的带入到角色里. 只能在一旁静静地角色们展现自己, 不再能把自己带入对比自己.</p>
<p>或许是看的时候不太专注了? 那个时候的我, 在看完之后还会有那种怅然若失的感觉, 脑子里会不时地重复剧情. 而现在就变成了在使用快餐, 仅仅是为了吃饱. 几个月前我又体验了这样的感觉是《薇尔莉特·伊芙加登外传 - 永远与自动手记人偶 》</p>
<p>像是故乡的春风一样, 我在想, 这样的感觉是否也是无法再现的呢.</p>
<p>这让我想起了我在训练的模型(唐突的例子)</p>
<p>随着训练次数的上升, 原来的数据都无法再现了.</p>
<p>我们现在还能否假装自己是别人呢?</p>
<p>现在我们还能做白日梦吗...</p>
<p>在一面让自己适应于现实的时候, 我是否还能跳出这些, 跳出现实的框架, 去想那些虚无飘渺的事, 去假装那些是真的, 假装自己是另一个人呢.</p>
<p>这是否是我们对现实的过拟合呢(又一个唐突的例子).</p>
<p>(deep learning总是能在奇怪的地方派上用场呢</p>
<p>我又想起来人们总说人变老了会越来越想小孩, <s>嘛, 看起来不是过拟合呢</s></p>
<p>如果能把这个4维的空间永远的保留下来该有多好, 即使是离散的也好呢...</p>
<p>ねぇ</p>
<p>思い出のカケラに<br>
名前をつけて保存するなら<br>
“宝物”がぴったりだね</p>
<p>说说看最近的事吧</p>
<p>在忙着做大作业...</p>
<p>在忙着做数据分析的比赛...</p>
<p>发现自己好像上课越来越不认真了...</p>
]]></content>
    </entry>
</feed>